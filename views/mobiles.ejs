<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mobile Inventory</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <style>
        body {
            background-color: #1f2937;
            color: #e5e7eb;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
        }

        .card {
            background-color: #2d3748;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 1rem;
        }

        .btn {
            background-color: #4f46e5;
            color: #e5e7eb;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn:hover {
            background-color: #4338ca;
        }

        .input-field {
            border: none;
            background-color: #374151;
            color: #e5e7eb;
            padding: 0.5rem;
            border-radius: 5px;
            width: 100%;
        }

        .input-field::placeholder {
            color: #9ca3af;
        }
    </style>
</head>

<body class="p-4">

    <div class="container">
        <h1 class="text-2xl font-bold mb-4">ESD- MongoDB- Express Api's</h1>

        <!-- Create New Mobile Form -->
        <div class="mb-4">
            <button class="btn" onclick="toggleCreateForm()">Add New Mobile</button>
            <div id="createForm" style="display: none;">
                <form onsubmit="addMobile(event)">
                    <input type="text" class="input-field mb-2" id="newBrand" placeholder="Brand">
                    <input type="text" class="input-field mb-2" id="newName" placeholder="Name">
                    <input type="number" class="input-field mb-2" id="newPrice" placeholder="Price">
                    <input type="text" class="input-field mb-2" id="newDisplay" placeholder="Display">
                    <input type="text" class="input-field mb-2" id="newCamera" placeholder="Camera">
                    <input type="text" class="input-field mb-2" id="newBattery" placeholder="Battery">
                    <button type="submit" class="btn">Add</button>
                </form>
            </div>
        </div>

        <!-- List of Mobiles -->
        <div id="mobileList">
            <% mobiles.forEach((mobile) => { %>
                <div class="card">
                    <h2 class="text-xl font-bold mb-2">Model Name:  <%= mobile.mobileName %></h2>
                    <p class="text-gray-200 mb-2">Brand Name: <%= mobile.mobileBrand %></p>
                    <p class="text-gray-200 mb-2">Price: $<%= mobile.mobilePrice %></p>
                    <p class="text-gray-200 mb-2">Display:  <%= mobile.mobileDisplay %></p>
                    <p class="text-gray-200 mb-2">Camera: <%= mobile.mobileCamera %></p>
                    <p class="text-gray-200 mb-2">Battery: <%= mobile.mobileBattery %></p>
                    <div class="flex justify-end mb-2">
                        <button class="btn mr-2" onclick="editMobile('<%= mobile._id %>')">Edit</button>
                        <button class="btn" onclick="deleteMobile('<%= mobile.mobileName %>')">Delete</button>
                    </div>
                    <div id="editForm<%= mobile._id %>" style="display: none;">
                        <input type="text" class="input-field mb-2" id="editedBrand<%= mobile._id %>"
                        value="<%= mobile.mobileBrand %>">
                        <input type="text" class="input-field mb-2" id="editedName<%= mobile._id %>"
                            value="<%= mobile.mobileName %>">
                        <input type="text" class="input-field mb-2" id="editedPrice<%= mobile._id %>"
                            value="<%= mobile.mobilePrice %>">
                        <input type="text" class="input-field mb-2" id="editedDisplay<%= mobile._id %>"
                            value="<%= mobile.mobileDisplay %>">
                        <input type="text" class="input-field mb-2" id="editedCamera<%= mobile._id %>"
                            value="<%= mobile.mobileCamera %>">
                        <input type="text" class="input-field mb-2" id="editedBattery<%= mobile._id %>"
                            value="<%= mobile.mobileBattery %>">
                        <button class="btn" onclick="saveChanges('<%= mobile._id %>')">Save Changes</button>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>

    <script>


function searchMobiles() {
    const searchInput = document.getElementById('searchInput');
    const searchTerm = searchInput.value.toLowerCase();

    const mobileList = document.getElementById('mobileList');
    const mobiles = mobileList.getElementsByClassName('bg-white');

    for (const mobile of mobiles) {
        const mobileBrand = mobile.querySelector('.text-gray-700:nth-child(2)').textContent.toLowerCase();

        if (mobileBrand.includes(searchTerm)) {
            mobile.style.display = 'block';
        } else {
            mobile.style.display = 'none';
        }
    }
}

function toggleCreateForm() {
    const createForm = document.getElementById('createForm');
    const createButton = document.querySelector('.bg-green-500');

    if (createForm.style.display === 'none' || createForm.style.display === '') {
        createForm.style.display = 'block';
        createButton.textContent = 'Cancel';
    } else {
        createForm.style.display = 'none';
        createButton.textContent = 'Create New Mobile';
    }
}

async function addMobile(event) {
    event.preventDefault();

    const newBrand = document.getElementById('newBrand').value;
    const newName = document.getElementById('newName').value;
    const newPrice = document.getElementById('newPrice').value;
    const newDisplay = document.getElementById('newDisplay').value;
    const newCamera = document.getElementById('newCamera').value;
    const newBattery = document.getElementById('newBattery').value;

    const response = await fetch('/mobiles', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            mobileBrand: newBrand,
            mobileName: newName,
            mobilePrice: newPrice,
            mobileDisplay: newDisplay,
            mobileCamera: newCamera,
            mobileBattery: newBattery
        })
    });

    swal("Added!", "Added Your Data", "success");
    
setTimeout(function() {
    window.location.reload();
}, 10000); 

    if (response.ok) {
        const createdMobile = await response.json();

        const mobileList = document.getElementById('mobileList');
        const newMobileElement = document.createElement('div');
        newMobileElement.className = 'bg-white p-4 shadow-md';
        newMobileElement.innerHTML = `
            <h2 class="text-xl font-bold mb-2">${createdMobile.mobileName}</h2>
            <p class="text-gray-700 mb-2">${createdMobile.mobileBrand}</p>
            <p class="text-gray-700 mb-2">$${createdMobile.mobilePrice}</p>
            <p class="text-gray-700 mb-2">${createdMobile.mobileDisplay}</p>
            <p class="text-gray-700 mb-2">${createdMobile.mobileCamera}</p>
            <p class="text-gray-700 mb-2">${createdMobile.mobileBattery}</p>
            <div class="flex justify-end mb-2">
                <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mr-2"
                        onclick="editMobile('${createdMobile._id}')">Edit</button>
                <button class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-full"
                        onclick="deleteMobile('${createdMobile._id}')">Delete</button>
            </div>
            <div id="editForm${createdMobile._id}" style="display: none;">
                <input type="text" class="border rounded p-1 mb-2 w-full" id="editedBrand${createdMobile._id}"
                    value="${createdMobile.mobileBrand}">
                <input type="text" class="border rounded p-1 mb-2 w-full" id="editedName${createdMobile._id}"
                    value="${createdMobile.mobileName}">
                <input type="text" class="border rounded p-1 mb-2 w-full" id="editedPrice${createdMobile._id}"
                    value="${createdMobile.mobilePrice}">
                <input type="text" class="border rounded p-1 mb-2 w-full" id="editedDisplay${createdMobile._id}"
                    value="${createdMobile.mobileDisplay}">
                <input type="text" class="border rounded p-1 mb-2 w-full" id="editedCamera${createdMobile._id}"
                    value="${createdMobile.mobileCamera}">
                <input type="text" class="border rounded p-1 mb-2 w-full" id="editedBattery${createdMobile._id}"
                    value="${createdMobile.mobileBattery}">
                <button class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-full"
                        onclick="saveChanges('${createdMobile._id}')">Save Changes</button>
            </div>
        `;
        mobileList.appendChild(newMobileElement);

        document.getElementById('createForm').reset();
        toggleCreateForm();
    }
}



       function editMobile(id) {
    const editForm = document.getElementById(`editForm${id}`);
    editForm.style.display = 'block';
}

async function saveChanges(id) {
    try {
        const editedBrand = document.getElementById(`editedBrand${id}`).value;
        const editedName = document.getElementById(`editedName${id}`).value;
        const editedPrice = document.getElementById(`editedPrice${id}`).value;
        const editedDisplay = document.getElementById(`editedDisplay${id}`).value;
        const editedCamera = document.getElementById(`editedCamera${id}`).value;
        const editedBattery = document.getElementById(`editedBattery${id}`).value;

        const response = await fetch(`/mobiles/${id}`, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                mobileBrand:editedBrand,
                mobileName: editedName,
                mobilePrice: editedPrice,
                mobileDisplay: editedDisplay,
                mobileCamera: editedCamera,
                mobileBattery: editedBattery
            })
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const updatedMobile = await response.json();

        // Optionally, update the UI dynamically with the updated data
        // For example, you can find the DOM elements corresponding to this mobile
        // and update their values

        // Hide the edit form
        const editForm = document.getElementById(`editForm${id}`);
        editForm.style.display = 'none';

      
        swal("Updated!", "Updated Your Data", "info");

setTimeout(function() {
    window.location.reload();
}, 10000); // 2000 milliseconds (2 seconds) pause

    } catch (error) {
        console.error('Error:', error);
    }
}




async function deleteMobile(name) {
    try {
        const response = await fetch(`/mobiles/delete-by-name/${name}`, {
            method: 'DELETE',
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const result = await response.json();

        swal("Deleted", "Deletd Your Data", "error");
        
setTimeout(function() {
    window.location.reload();
}, 10000); 
    } catch (error) {
        console.error('Error:', error);
    }
}





    </script>
    
    

    <script src="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.js"></script>
</body>

</html>
